@block
def reg_file(reset, clk, ra, rb, wa, wda, reg_wr, rda, rdb):

    registers = [signal(intbv(10 + i)[CPU_BITS:]) for i in range(32)]

    @always_comb
    def read():
        if reset.next == INACTIVE_HIGH:
            if ra:
                rda.next = registers[ra]

            if rb:
                rdb.next = registers[rb]

    @always(clk.posedge)
    def write():
        if reset.next == INACTIVE_HIGH:
            if reg_wr and (wa > 0):
                registers[wa].next = wda

    return read, write
